Rubik’s Cube Solver Using Computer Vision and Python

Slide 1: Title
Rubik’s Cube Solver Using Computer Vision and Python

Slide 2: Project Overview
Automates solving a Rubik’s Cube using a webcam and computer vision.
Detects cube faces and colors, then computes the solution using the kociemba algorithm.

Slide 3: Key Features & Good Deeds
- Real-time cube face detection with OpenCV.
- Guides the user to show each face for accurate color detection.
- Handles errors gracefully (camera, video, etc.).
- Displays instructions and solution steps visually.
- Finds the shortest solution sequence for the cube.
- Allows user to quit at any time with a key press.
- Saves output video for review.

Slide 4: How It Works
- Captures video from webcam.
- Detects and analyzes each face of the cube.
- Concatenates face data for the solver.
- Computes solution steps and displays them on screen.

Slide 5: Technologies Used
- Python 3
- OpenCV (cv2)
- Numpy
- kociemba (Rubik’s Cube solver library)
- Computer Vision techniques

Slide 6: User Experience
- Step-by-step guidance for showing each cube face.
- Visual feedback and instructions on the video feed.
- Solution steps displayed for easy following.

Slide 7: Impact & Benefits
- Makes cube solving accessible to everyone.
- Encourages interest in programming and computer vision.
- Can be extended for educational or competitive use.

Slide 8: Demo & Results
- Screenshots or video of the program in action.
- Highlight solution steps and visual feedback.

Slide 9: Conclusion
- A practical example of AI and computer vision in action.
- Promotes learning, automation, and fun!

Good luck at the Airpaces Hackathon Competition!
